s <- as.character(sentence)
w <- strsplit(s, ' ')[[1]]
uw <- unique(w)
print(uW)
fs <- NULL
sapply(uw, function(x){
if(length(x) > 1){
fs <<- paste(fs, x)
}
})
as.cset(fs)
}
sentenceToSet(banner)
sentenceToSet <- function(sentence) {
s <- as.character(sentence)
w <- strsplit(s, ' ')[[1]]
uw <- unique(w)
print(uw)
fs <- NULL
sapply(uw, function(x){
if(length(x) > 1){
fs <<- paste(fs, x)
}
})
as.cset(fs)
}
sentenceToSet(banner)
length("cisco")
string.length
nchar("cisco")
sentenceToSet <- function(sentence) {
s <- as.character(sentence)
w <- strsplit(s, ' ')[[1]]
uw <- unique(w)
print(uw)
fs <- NULL
sapply(uw, function(x){
if(nchar(x) > 1){
fs <<- paste(fs, x)
}
})
as.cset(fs)
}
sentenceToSet(banner)
sentenceToSet <- function(sentence) {
s <- as.character(sentence)
w <- strsplit(s, ' ')[[1]]
uw <- strsplit(unique(w), ' ')[[1]]
print(uw)
fs <- NULL
sapply(uw, function(x){
if(nchar(x) > 1){
fs <<- paste(fs, x)
}
})
as.cset(fs)
}
sentenceToSet(banner)
sentenceToSet <- function(sentence) {
s <- as.character(sentence)
w <- strsplit(s, ' ')[[1]]
uw <- unique(w)
print(uw)
fs <- NULL
sapply(uw, function(x){
if(nchar(x) > 1){
fs <<- paste(fs, x)
}
})
as.cset(strsplit(unique(fs), ' ')[[1]])
}
sentenceToSet(banner)
sentenceToSet <- function(sentence) {
s <- as.character(sentence)
w <- strsplit(s, ' ')[[1]]
uw <- unique(w)
print(uw)
fs <- NULL
sapply(uw, function(x){
if(nchar(x) > 1){
fs <<- paste(fs, x)
}
})
as.cset(strsplit(fs, ' ')[[1]])
}
sentenceToSet(banner)
sentenceToSet <- function(sentence) {
s <- as.character(sentence)
w <- strsplit(s, ' ')[[1]]
uw <- unique(w)
print(uw)
fs <- NULL
sapply(uw, function(x){
if(nchar(x) > 1){
fs <<- paste(fs, x)
}
})
as.cset(strsplit(cleanSentence(fs), ' ')[[1]])
}
sentenceToSet(banner)
sentenceToSet <- function(sentence) {
s <- as.character(sentence)
w <- strsplit(s, ' ')[[1]]
uw <- unique(w)
fs <- NULL
sapply(uw, function(x){
if(nchar(x) > 1){
fs <<- paste(fs, x)
}
})
as.cset(strsplit(cleanSentence(fs), ' ')[[1]])
}
sentenceToSet(banner)
prepareBanner(banner, titlesWordList)
prepareBanner <- function(b, wl) {
bs <- sentenceToSet(cleanSentence(b))
r <- bs & wl
words <- strsplit(b, ' ')[[1]]
fs <- NULL
sapply(words, function(x){
if(length(as.set(x) & r) == 1){
fs <<- paste(fs, x)
}
})
sentenceToSet(cleanSentence(fs))
}
prepareBanner(banner, titlesWordList)
source('~/Data/banner-cpe/banner-cpe_v44.R', encoding = 'UTF-8', echo=TRUE)
findBanner(banner)
prepareBanner(banner, titlesWordList)
banner
prepareBanner <- function(b, wl) {
bs <- sentenceToSet(cleanSentence(b))
print(bs)
r <- bs & wl
words <- strsplit(b, ' ')[[1]]
fs <- NULL
sapply(words, function(x){
if(length(as.set(x) & r) == 1){
fs <<- paste(fs, x)
}
})
sentenceToSet(cleanSentence(fs))
}
prepareBanner(banner, titlesWordList)
prepareBanner <- function(b, wl) {
bs <- sentenceToSet(cleanSentence(b))
print(bs)
r <- bs & wl
print(r)
words <- strsplit(b, ' ')[[1]]
fs <- NULL
sapply(words, function(x){
if(length(as.set(x) & r) == 1){
fs <<- paste(fs, x)
}
})
sentenceToSet(cleanSentence(fs))
}
prepareBanner(banner, titlesWordList)
prepareBanner <- function(b, wl) {
bs <- sentenceToSet(cleanSentence(b))
print(bs)
r <- bs & wl
print(r)
words <- strsplit(b, ' ')[[1]]
print(words)
fs <- NULL
sapply(words, function(x){
if(length(as.set(x) & r) == 1){
fs <<- paste(fs, x)
}
})
sentenceToSet(cleanSentence(fs))
}
prepareBanner(banner, titlesWordList)
banner
sentenceToSet(cleanSentence(banner))
unlist(sentenceToSet(cleanSentence(banner)))
prepareBanner <- function(b, wl) {
bs <- sentenceToSet(cleanSentence(b))
print(bs)
r <- bs & wl
print(r)
words <- unlist(bs)
print(words)
fs <- NULL
sapply(words, function(x){
if(length(as.set(x) & r) == 1){
fs <<- paste(fs, x)
}
})
sentenceToSet(cleanSentence(fs))
}
prepareBanner(banner, titlesWordList)
prepareBanner <- function(b, wl) {
bs <- sentenceToSet(cleanSentence(b))
print(bs)
r <- bs & wl
print(r)
words <- strsplit(cleanSentence(b), ' ')[[1]]
print(words)
fs <- NULL
sapply(words, function(x){
if(length(as.set(x) & r) == 1){
fs <<- paste(fs, x)
}
})
sentenceToSet(cleanSentence(fs))
}
prepareBanner(banner, titlesWordList)
prepareBanner <- function(b, wl) {
bs <- sentenceToSet(cleanSentence(b))
r <- bs & wl
words <- strsplit(cleanSentence(b), ' ')[[1]]
fs <- NULL
sapply(words, function(x){
if(length(as.set(x) & r) == 1){
fs <<- paste(fs, x)
}
})
sentenceToSet(cleanSentence(fs))
}
banner <- 'Cisco IOS Software, Catalyst 4000 L3 Switch Software (cat4000-I9S-M), Version 12.2(25)EWA10, RELEASE SOFTWARE (fc1)'
findBanner(banner)
findBanner('Linux/2.6.21, UPnP/1.0, Portable SDK for UPnP devices/1.3.1')
findBanner('9.3.6-P1-RedHat-9.3.6-20.P1.el5')
findBanner('7.0-P1-RedHat-7.0-20.P1.el5')
findBanner('9.3.6-P1-RedHat-9.3.6-20.P1.el5')
sentenceToSet(banner)
m <- sentenceToSet(banner)
m
findBanner <- function(banner){
st <- Sys.time()
print(banner)
bannerSet <- prepareBanner(banner, titlesWordList)
print(bannerSet)
#ndf <- data.frame(names = character(), factor = numeric(), titles = character())
ndf <- NULL
i <- 0
lbs <- length(bannerSet)
rdf <- sapply(bannerSet, function(word){
print(word)
factor <- (lbs - i) / lbs
# len <- length(as.set(word) & cpeFirstWord)
# if(len == 1){
#   factor <- 1
# }else{
#   len <- length(as.set(word) & cpeSecondWord)
#   if(len == 1){
#     factor <- 0.75
#   }else{
#     factor <- 0.5
#   }
# }
pattern <- paste('(^| )', word, '( |$)', sep = '')
dataframeWithWord <- dataFrame[grep(pattern, dataFrame$titles), ]
titlesSet <- lapply(dataframeWithWord$titles, sentenceToSet)
#tdf <- findCPE(bannerSet, titlesSet, dataframeWithWord, 0.6 / (length(bannerSet) + 2))
tdf <- findCPE(bannerSet, titlesSet, dataframeWithWord, factor)
ndf <<- rbind(ndf, tdf)
i <<- i + 1
})
tmp <- aggregate(ndf$factor, by = list(CPE = ndf$names), FUN = sum)
tmp <- data.frame(tmp$CPE[tmp$x > 0.07], tmp$x[tmp$x > 0.07])
#head(tmp[order(-tmp$x), ], n = 10)
tmp[order(-tmp$x), ]
}
findBanner('Linux/2.6.21, UPnP/1.0, Portable SDK for UPnP devices/1.3.1')
findBanner <- function(banner){
st <- Sys.time()
print(banner)
bannerSet <- prepareBanner(banner, titlesWordList)
print(bannerSet)
#ndf <- data.frame(names = character(), factor = numeric(), titles = character())
ndf <- NULL
i <- 0
lbs <- length(bannerSet)
rdf <- sapply(bannerSet, function(word){
print(word)
factor <- (lbs - i) / lbs
# len <- length(as.set(word) & cpeFirstWord)
# if(len == 1){
#   factor <- 1
# }else{
#   len <- length(as.set(word) & cpeSecondWord)
#   if(len == 1){
#     factor <- 0.75
#   }else{
#     factor <- 0.5
#   }
# }
pattern <- paste('(^| )', word, '( |$)', sep = '')
dataframeWithWord <- dataFrame[grep(pattern, dataFrame$titles), ]
titlesSet <- lapply(dataframeWithWord$titles, sentenceToSet)
#tdf <- findCPE(bannerSet, titlesSet, dataframeWithWord, 0.6 / (length(bannerSet) + 2))
tdf <- findCPE(bannerSet, titlesSet, dataframeWithWord, factor)
ndf <<- rbind(ndf, tdf)
i <<- i + 1
})
tmp <- aggregate(ndf$factor, by = list(CPE = ndf$names), FUN = sum)
tmp <- data.frame(tmp$CPE[tmp$x > 0.07], tmp$x[tmp$x > 0.07])
print(tmp)
#head(tmp[order(-tmp$x), ], n = 10)
tmp[order(-tmp$x), ]
}
findBanner('Linux/2.6.21, UPnP/1.0, Portable SDK for UPnP devices/1.3.1')
findBanner <- function(banner){
st <- Sys.time()
print(banner)
bannerSet <- prepareBanner(banner, titlesWordList)
print(bannerSet)
#ndf <- data.frame(names = character(), factor = numeric(), titles = character())
ndf <- NULL
i <- 0
lbs <- length(bannerSet)
rdf <- sapply(bannerSet, function(word){
print(word)
factor <- (lbs - i) / lbs
# len <- length(as.set(word) & cpeFirstWord)
# if(len == 1){
#   factor <- 1
# }else{
#   len <- length(as.set(word) & cpeSecondWord)
#   if(len == 1){
#     factor <- 0.75
#   }else{
#     factor <- 0.5
#   }
# }
pattern <- paste('(^| )', word, '( |$)', sep = '')
dataframeWithWord <- dataFrame[grep(pattern, dataFrame$titles), ]
titlesSet <- lapply(dataframeWithWord$titles, sentenceToSet)
#tdf <- findCPE(bannerSet, titlesSet, dataframeWithWord, 0.6 / (length(bannerSet) + 2))
tdf <- findCPE(bannerSet, titlesSet, dataframeWithWord, factor)
ndf <<- rbind(ndf, tdf)
i <<- i + 1
})
tmp <- aggregate(ndf$factor, by = list(CPE = ndf$names), FUN = sum)
tmp <- data.frame(tmp$CPE[tmp$x > 0.07], tmp$x[tmp$x > 0.07])
colnames(tmp) <- c('cpe', 'factor')
#headcolnames(ndf) <- c('names', 'titles')(tmp[order(-tmp$x), ], n = 10)
tmp[order(-tmp$factor), ]
}
findBanner('Linux/2.6.21, UPnP/1.0, Portable SDK for UPnP devices/1.3.1')
findBanner('7.0-P1-RedHat-7.0-20.P1.el5'
)
findBanner('9.3.6-P1-RedHat-9.3.6-20.P1.el5')
cutScore <- 0.07
#banner <- 'This is a fucking SuperMicro X9DRG-HTF MegaDevice Linux Kernel 2.6.16.2'
#banner <- 'This is a fucking SuperMicro X9DRG-HTF MegaDevice Linux Kernel'
#banner <- 'Apache/2.4.16 (Unix) OpenSSL/1.0.1e-fips mod_bwlimited/1.4'
#banner <- 'Apache (Unix) OpenSSL/1.0.1e-fips mod_bwlimited'
#banner <- 'This is a fucking SuperMicro X9DRG-HTF MegaDevice'
#banner <- "Welcome to the MRV LX Series Server"
#banner <- "Cisco IOS Software, C2900 Software (C2900-UNIVERSALK9-M), Version 15.1(4)M5, RELEASE SOFTWARE (fc1)"
#banner <- 'Microsoft-IIS/7.5'
#banner <- 'SuperMicro X9DRG-HTF'
#banner <- 'This is a fucking SuperMicro X9DRG-HTF MegaDevice Linux Kernel 2.6.16.2'
#banner <- 'Microsoft-IIS/7.5'
#banner <- 'Apache/2.4.16 (Unix) OpenSSL/1.0.1e-fips mod_bwlimited/1.4'
#banner <- 'Apache/2.2.29 (Unix) mod_ssl/2.2.29 OpenSSL/1.0.1e-fips mod_bwlimited/1.4'
banner <- 'Cisco IOS Software, Catalyst 4000 L3 Switch Software (cat4000-I9S-M), Version 12.2(25)EWA10, RELEASE SOFTWARE (fc1)'
findBanner(banner)
banner
sentenceToSet(cleanSentence(banner))
c(1:100)
sapply(c(1:100), sentenceToSet(cleanSentence(banner)))
sapply(c(1:100), function(x){sentenceToSet(cleanSentence(banner))})
sapply(c(1:1000), function(x){sentenceToSet(cleanSentence(banner))})
ss <- sapply(c(1:1000), function(x){sentenceToSet(cleanSentence(banner))})
sentenceToSet(cleanSentence(banner))
sentenceToSet(cleanSentence(banner)) & ss
sapply(c(1:1000), function(x){sentenceToSet(cleanSentence(banner))})
findBanner <- function(banner){
st <- Sys.time()
print(banner)
bannerSet <- prepareBanner(banner, titlesWordList)
print(bannerSet)
#ndf <- data.frame(names = character(), factor = numeric(), titles = character())
ndf <- NULL
i <- 0
lbs <- length(bannerSet)
rdf <- sapply(bannerSet, function(word){
print(word)
factor <- (lbs - i) / lbs
# len <- length(as.set(word) & cpeFirstWord)
# if(len == 1){
#   factor <- 1
# }else{
#   len <- length(as.set(word) & cpeSecondWord)
#   if(len == 1){
#     factor <- 0.75
#   }else{
#     factor <- 0.5
#   }
# }
pattern <- paste('(^| )', word, '( |$)', sep = '')
dataframeWithWord <- dataFrame[grep(pattern, dataFrame$titles), ]
titlesSet <- lapply(dataframeWithWord$titles, sentenceToSet)
print('>>1')
#tdf <- findCPE(bannerSet, titlesSet, dataframeWithWord, 0.6 / (length(bannerSet) + 2))
tdf <- findCPE(bannerSet, titlesSet, dataframeWithWord, factor)
print('>>2')
ndf <<- rbind(ndf, tdf)
i <<- i + 1
})
tmp <- aggregate(ndf$factor, by = list(CPE = ndf$names), FUN = sum)
tmp <- data.frame(tmp$CPE[tmp$x > cutScore], tmp$x[tmp$x > cutScore])
colnames(tmp) <- c('cpe', 'factor')
#headcolnames(ndf) <- c('names', 'titles')(tmp[order(-tmp$x), ], n = 10)
tmp[order(-tmp$factor), ]
}
findBanner <- function(banner){
st <- Sys.time()
print(banner)
bannerSet <- prepareBanner(banner, titlesWordList)
print(bannerSet)
#ndf <- data.frame(names = character(), factor = numeric(), titles = character())
ndf <- NULL
i <- 0
lbs <- length(bannerSet)
rdf <- sapply(bannerSet, function(word){
print(word)
factor <- (lbs - i) / lbs
# len <- length(as.set(word) & cpeFirstWord)
# if(len == 1){
#   factor <- 1
# }else{
#   len <- length(as.set(word) & cpeSecondWord)
#   if(len == 1){
#     factor <- 0.75
#   }else{
#     factor <- 0.5
#   }
# }
pattern <- paste('(^| )', word, '( |$)', sep = '')
dataframeWithWord <- dataFrame[grep(pattern, dataFrame$titles), ]
print('>>0')
titlesSet <- lapply(dataframeWithWord$titles, sentenceToSet)
print('>>1')
#tdf <- findCPE(bannerSet, titlesSet, dataframeWithWord, 0.6 / (length(bannerSet) + 2))
tdf <- findCPE(bannerSet, titlesSet, dataframeWithWord, factor)
print('>>2')
ndf <<- rbind(ndf, tdf)
i <<- i + 1
})
tmp <- aggregate(ndf$factor, by = list(CPE = ndf$names), FUN = sum)
tmp <- data.frame(tmp$CPE[tmp$x > cutScore], tmp$x[tmp$x > cutScore])
colnames(tmp) <- c('cpe', 'factor')
#headcolnames(ndf) <- c('names', 'titles')(tmp[order(-tmp$x), ], n = 10)
tmp[order(-tmp$factor), ]
}
banner
findBanner(banner)
head(dataFrame)
head(matrix)
prepareTitles <- function(m) {
t <- sapply(m[, 2], cleanSentence)
print('[+] Titles prepared')
et <- Sys.time()
print(et - st)
ts <- lapply(t, sentenceToSet)
print('[+] TitlesSet prepared')
et <- Sys.time()
print(et - st)
ndf <- as.data.frame(cbind(m[, 1], t, ts))
colnames(ndf) <- c('names', 'titles', 'titlesSet')
ndf
}
prepareTitles(head(matrix))
mydf <- prepareTitles(head(matrix))
mydf$names
mydf$tiles
mydf$titles
mydf$titlesSet
pattern <- paste('(^| )', 'cisco', '( |$)', sep = '')
dataFrame[grep(pattern, dataFrame$titles), ]
source('~/Data/banner-cpe/banner-cpe_v6.R', encoding = 'UTF-8', echo=TRUE)
source('~/Data/banner-cpe/banner-cpe_v6.R', echo=TRUE)
head(dataFrame)
st <- Sys.time()
print(banner)
bannerSet <- prepareBanner(banner, titlesWordList)
print(bannerSet)
ndf <- NULL
i <- 0
lbs <- length(bannerSet)
bannerSet
word <- 'microsoft'
print(word)
factor <- (lbs - i) / lbs
pattern <- paste('(^| )', word, '( |$)', sep = '')
dataframeWithWord <- dataFrame[grep(pattern, dataFrame$titles), ]
head(dataframeWithWord)
head(dataframeWithWord$titlesSet)
source('~/Data/banner-cpe/banner-cpe_v6.R', echo=TRUE)
source('~/Data/banner-cpe/banner-cpe_v6.R', echo=TRUE)
banner <- 'This is a fucking SuperMicro X9DRG-HTF MegaDevice'
#banner <- "Welcome to the MRV LX Series Server"
#banner <- "Cisco IOS Software, C2900 Software (C2900-UNIVERSALK9-M), Version 15.1(4)M5, RELEASE SOFTWARE (fc1)"
#banner <- 'Microsoft-IIS/7.5'
#banner <- 'SuperMicro X9DRG-HTF'
#banner <- 'Apache/2.4.16 (Unix) OpenSSL/1.0.1e-fips mod_bwlimited/1.4'
#banner <- 'Apache/2.2.29 (Unix) mod_ssl/2.2.29 OpenSSL/1.0.1e-fips mod_bwlimited/1.4'
#banner <- 'Cisco IOS Software, Catalyst 4000 L3 Switch Software (cat4000-I9S-M), Version 12.2(25)EWA10, RELEASE SOFTWARE (fc1)'
findCPE(banner)
source('~/Data/banner-cpe/banner-cpe_v6.R', echo=TRUE)
source('~/Data/banner-cpe/banner-cpe_v6.R', echo=TRUE)
source('~/Data/banner-cpe/banner-cpe_v6.R', echo=TRUE)
source('~/Data/banner-cpe/banner2cpe.R', echo=TRUE)
library(devtools)
