{
    "collab_server" : "",
    "contents" : "#cat official-cpe-dictionary_v2.3.xml | grep '<title xml:lang=\"en-US\">' | awk -F'>' '{print $2}' | awk -F'<' '{print $1}' | tr '\\/' ' ' | tr '\\,' ' ' | tr '\\[' ' ' | tr '\\]' ' ' | tr '\\(' ' ' | tr '\\)' ' ' | tr '\\-' ' ' | tr '\\_' ' ' | tr '\\:' ' ' | tr ' ' '\\n' | tr [:upper:] [:lower:] | sort -u  | grep -v '^$' > titles.txt\n#comm -23 titles.txt ourStopWords.txt > titlesWithoutStopWords.txt\n\n\ncleanSentence <- function(s) {\n  s <- gsub('[])/,([]', ' ', s)\n  s <- gsub('[-_:]', ' ', s)\n  s <- tolower(s)\n  s <- tm::removeWords(s, tm::stopwords(kind = 'en'))\n  s <- gsub('\\\\s+', ' ', s)\n  s <- gsub('^ ', '', s)\n  s\n}\n\n\n#' findCPE\n#'\n#' @param banner \n#'\n#' @return\n#' @export\n#'\n#' @examples\nfindCPE <- function(banner){\n  if(exists(\"dataFrame\") == FALSE){\n    load(file = 'R/dataFrame.rda')\n    load(file = 'R/titlesWordList.rda')\n    dataFrame <<- dataFrame\n    titlesWordList <<- titlesWordList\n  }\n  st <- Sys.time()\n  print(banner)\n  bannerSet <- prepareBanner(banner, titlesWordList)\n  print(bannerSet)\n  ndf <- NULL\n  i <- 0\n  lbs <- length(bannerSet)\n  rdf <- sapply(bannerSet, function(word){\n    print(word)\n    factor <- (lbs - i) / lbs\n    pattern <- paste('(^| )', word, '( |$)', sep = '')\n    dataframeWithWord <- dataFrame[grep(pattern, dataFrame$titles), ]\n    tdf <- FindCPEwithWord(bannerSet, dataframeWithWord, factor)\n    ndf <<- rbind(ndf, tdf)\n    i <<- i + 1\n  })\n  cutScore <- 0.07\n  tmp <- aggregate(ndf$factor, by = list(CPE = ndf$names), FUN = sum)\n  tmp <- data.frame(tmp$CPE[tmp$x > cutScore], tmp$x[tmp$x > cutScore])\n  colnames(tmp) <- c('cpe', 'factor')\n  tmp[order(-tmp$factor), ]\n}\n\nFindCPEwithWord <- function(banner, df, factor){\n  print(factor)\n  percentages <- similarity(banner, df$titlesSet) * factor\n  cutScore <- 0\n  ndf <- data.frame(names = unlist(df$names)[percentages > cutScore], \n                    factor = percentages[percentages > cutScore], \n                    titles = unlist(df$titles)[percentages > cutScore]\n                    )\n  ndf <- head(ndf[order(-ndf$factor, ndf$names),], n = 10)\n  ndf\n}\n\ngetFromFile<- function(filePath){\n  st <- Sys.time()\n  words <- scan(filePath, what = 'character', sep = '\\n')\n  et <- Sys.time()\n  print(et - st)\n  sets::as.set(words)\n}\n\nloadXML <- function(xmlFile){\n  st <- Sys.time()\n  doc <- XML::xmlTreeParse(xmlFile, useInternalNodes = TRUE)\n  rootNode <- XML::xmlRoot(doc)\n  nameSpace <- XML::xmlNamespace(rootNode)\n  print('[+] XML loaded')\n  et <- Sys.time()\n  print(et - st)\n  cpeNames <- '/ns:cpe-list/ns:cpe-item'\n  names <- XML::xpathApply(rootNode, cpeNames, XML::xmlGetAttr, 'name', namespaces = c(ns = nameSpace))\n  print('[+] Names loaded')\n  et <- Sys.time()\n  print(et - st)\n  cpeTitles <- '/ns:cpe-list/ns:cpe-item/ns:title[@xml:lang=\"en-US\"]'\n  titles <- XML::xpathSApply(rootNode, cpeTitles, XML::xmlValue, namespaces = c(ns = nameSpace))\n  print('[+] Titles loaded')\n  et <- Sys.time()\n  print(et - st)\n  cbind(names, titles)\n}\n\nprepareBanner <- function(b, wl) {\n  bs <- sentenceToSet(cleanSentence(b))\n  r <- bs & wl\n  words <- strsplit(cleanSentence(b), ' ')[[1]]\n  fs <- NULL\n  sapply(words, function(x){\n    if(length(sets::as.set(x) & r) == 1){\n      fs <<- paste(fs, x)\n    }\n  })\n  sentenceToSet(cleanSentence(fs))\n}\n\nprepareDataframe <- function(m) {\n  st <- Sys.time()\n  t <- sapply(m[, 2], cleanSentence)\n  print('[+] Titles ready')\n  et <- Sys.time()\n  print(et - st)\n  ts <- lapply(t, sentenceToSet)\n  print('[+] TitlesSet ready')\n  et <- Sys.time()\n  print(et - st)\n  ndf <- as.data.frame(cbind(m[, 1], t, ts))\n  colnames(ndf) <- c('names', 'titles', 'titlesSet')\n  print('[+] Dataframe ready')\n  et <- Sys.time()\n  print(et - st)\n  ndf\n}\n\n#' prepareGlobalVars\n#'\n#' @return\n#' @export\n#'\n#' @examples\nprepareGlobalVars <- function(){\n  xmlFile <- 'inst/exdata/official-cpe-dictionary_v2.3.xml'\n  matrix <- loadXML(xmlFile)\n  dataFrame <- prepareDataframe(matrix)\n  titlesWordList <- getFromFile('inst/exdata/titlesWithoutStopWords.txt')\n  save(dataFrame, file = 'R/dataFrame.rda')\n  save(titlesWordList, file = 'R/titlesWordList.rda')\n}\n\nsentenceToSet <- function(sentence) {\n  s <- as.character(sentence)\n  w <- strsplit(s, ' ')[[1]]\n  uw <- unique(w)\n  fs <- NULL\n  sapply(uw, function(x){\n    if(nchar(x) > 1){\n      fs <<- paste(fs, x)\n    }\n  })\n  sets::as.cset(strsplit(cleanSentence(fs), ' ')[[1]])\n}\n\nsimilarity <- function(sa, list){\n  percentages <- sapply(list, function(sb){\n    exactMatch <- length(sa & sb) / length(sa)\n    sets::set_similarity(sa, sb, method = 'Jaccard') #* exactMatch \n  })\n  as.vector(percentages)\n}\n\n\n",
    "created" : 1461604518821.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1579775490",
    "id" : "239A2ECD",
    "lastKnownWriteTime" : 1461610743,
    "last_content_update" : 1461610743158,
    "path" : "~/Data/banner2cpe/R/banner2cpe.R",
    "project_path" : "R/banner2cpe.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : true,
    "source_window" : "",
    "type" : "r_source"
}